{"version":3,"sources":["fakeApi.js","index.js"],"names":["fetchProfileData","userId","userPromise","console","log","Promise","resolve","setTimeout","name","Error","Math","random","fetchUser","postsPromise","id","text","fetchPosts","user","wrapPromise","posts","promise","result","status","suspender","then","r","e","read","initialResource","App","_useState","useState","_useState2","Object","slicedToArray","resource","setResource","_useTransition","useTransition","timeoutMs","_useTransition2","startTransition","react_default","a","createElement","Fragment","onClick","nextUserId","ProfilePage","_ref","react","fallback","ProfileDetails","ProfileTimeline","_ref2","_ref3","map","post","key","rootElement","document","getElementById","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.4a42ca30.chunk.js","sourcesContent":["export function fetchProfileData(userId) {\n  let userPromise = fetchUser(userId);\n  let postsPromise = fetchPosts(userId);\n  return {\n    userId,\n    user: wrapPromise(userPromise),\n    posts: wrapPromise(postsPromise)\n  };\n}\n\n// Suspense integrations like Relay implement\n// a contract like this to integrate with React.\n// Real implementations can be significantly more complex.\n// Don't copy-paste this into your project!\nfunction wrapPromise(promise) {\n  let status = \"pending\";\n  let result;\n  let suspender = promise.then(\n    r => {\n      status = \"success\";\n      result = r;\n    },\n    e => {\n      status = \"error\";\n      result = e;\n    }\n  );\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      } else if (status === \"success\") {\n        return result;\n      }\n    }\n  };\n}\n\nexport function fetchUser(userId) {\n  console.log(\"fetch user \" + userId + \"...\");\n  return new Promise(resolve => {\n    setTimeout(() => {\n      console.log(\"fetched user \" + userId);\n      switch (userId) {\n        case 0:\n          resolve({\n            name: \"Ringo Starr\"\n          });\n          break;\n        case 1:\n          resolve({\n            name: \"George Harrison\"\n          });\n          break;\n        case 2:\n          resolve({\n            name: \"John Lennon\"\n          });\n          break;\n        case 3:\n          resolve({\n            name: \"Paul McCartney\"\n          });\n          break;\n        default:\n          throw Error(\"Unknown user.\");\n      }\n    }, 2000 * Math.random());\n  });\n}\n\nexport function fetchPosts(userId) {\n  console.log(\n    \"fetch posts for \" + userId + \"...\"\n  );\n  return new Promise(resolve => {\n    setTimeout(() => {\n      console.log(\"fetched posts for \" + userId);\n      switch (userId) {\n        case 0:\n          resolve([\n            {\n              id: 0,\n              text:\n                \"I get by with a little help from my friends\"\n            },\n            {\n              id: 1,\n              text:\n                \"I'd like to be under the sea in an octupus's garden\"\n            },\n            {\n              id: 2,\n              text:\n                \"You got that sand all over your feet\"\n            }\n          ]);\n          break;\n        case 1:\n          resolve([\n            {\n              id: 0,\n              text:\n                \"Turn off your mind, relax, and float downstream\"\n            },\n            {\n              id: 1,\n              text: \"All things must pass\"\n            },\n            {\n              id: 2,\n              text:\n                \"I look at the world and I notice it's turning\"\n            }\n          ]);\n          break;\n        case 2:\n          resolve([\n            {\n              id: 0,\n              text:\n                \"Living is easy with eyes closed\"\n            },\n            {\n              id: 1,\n              text:\n                \"Nothing's gonna change my world\"\n            },\n            {\n              id: 2,\n              text: \"I am the walrus\"\n            }\n          ]);\n          break;\n        case 3:\n          resolve([\n            {\n              id: 0,\n              text: \"Woke up, fell out of bed\"\n            },\n            {\n              id: 1,\n              text: \"Here, there, and everywhere\"\n            },\n            {\n              id: 2,\n              text:\n                \"Two of us sending postcards, writing letters\"\n            }\n          ]);\n          break;\n        default:\n          throw Error(\"Unknown user.\");\n      }\n    }, 2000 * Math.random());\n  });\n}\n","import React, {\n  useState,\n  useTransition,\n  Suspense\n} from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\nimport { fetchProfileData } from \"./fakeApi\";\n\nfunction getNextId(id) {\n  return id === 3 ? 0 : id + 1;\n}\n\nconst initialResource = fetchProfileData(0);\n\nfunction App() {\n  const [resource, setResource] = useState(\n    initialResource\n  );\n  const [\n    startTransition,\n    isPending\n  ] = useTransition({\n    timeoutMs: 3000\n  });\n  return (\n    <>\n      <button\n        onClick={() => {\n          startTransition(() => {\n            const nextUserId = getNextId(\n              resource.userId\n            );\n            setResource(\n              fetchProfileData(nextUserId)\n            );\n          });\n        }}\n      >\n        Next\n      </button>\n      <ProfilePage resource={resource} />\n    </>\n  );\n}\n\nfunction ProfilePage({ resource }) {\n  return (\n    <Suspense\n      fallback={<h1>Loading profile...</h1>}\n    >\n      <ProfileDetails resource={resource} />\n      <Suspense\n        fallback={<h1>Loading posts...</h1>}\n      >\n        <ProfileTimeline resource={resource} />\n      </Suspense>\n    </Suspense>\n  );\n}\n\nfunction ProfileDetails({ resource }) {\n  const user = resource.user.read();\n  return <h1>{user.name}</h1>;\n}\n\nfunction ProfileTimeline({ resource }) {\n  const posts = resource.posts.read();\n  return (\n    <ul>\n      {posts.map(post => (\n        <li key={post.id}>{post.text}</li>\n      ))}\n    </ul>\n  );\n}\n\nconst rootElement = document.getElementById(\n  \"root\"\n);\nReactDOM.createRoot(rootElement).render(<App />);\n"],"sourceRoot":""}